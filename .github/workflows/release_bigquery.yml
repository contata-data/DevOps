name: Release BigQuery Script
on:
  release:
    types: [created]  # Trigger on release creation
    paths:
      - "SQLCode/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-functions: ${{ steps.detect.outputs.changed-functions }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for  all  branches and  tags

      - name: Get release details
        id: get_release
        run: |
          RELEASE_TAG=$(echo "${{ github.ref }}" | sed -n 's/refs\/tags\/\(.*\)/\1/p')
          echo "Release tag: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          
          RELEASE_PrevTAG=$(git describe --tags --abbrev=0 ${RELEASE_TAG}^)
          echo "Release Prev tag: $RELEASE_PrevTAG"
          echo "RELEASE_PrevTAG=$RELEASE_PrevTAG" >> $GITHUB_ENV

          RELEASE_PrevTAG=$(git describe --tags --abbrev=0 ${RELEASE_TAG}^)
          echo "Release Prev tag: $RELEASE_PrevTAG"
          echo "RELEASE_PrevTAG=$RELEASE_PrevTAG" >> $GITHUB_ENV
         
      - name: Show content of release tag
        run: |
          echo "Content of release tag $RELEASE_TAG:"
          git ls-tree -r $RELEASE_TAG --name-only

      - name: Print git diff output
        run: |
          echo "Comparing  changes between main branch and tag $RELEASE_TAG"
          #git diff --name-only HEAD $RELEASE_PrevTAG
          #git diff --name-only HEAD $RELEASE_PrevTAG | grep -E '\.py$'
          #git describe --tags --abbrev=0 $RELEASE_TAG

      - name: Detect changes
        id: detect
        run: |
         CHANGED_FUNCTIONS=""
         for file in $(git diff --name-only $RELEASE_TAG $RELEASE_PrevTAG | grep -E '\.sql$'); do
           # Extract details from file path
           SrcFolder=$(dirname "$file")
           # Construct JSON format for each file
           file_json=$(printf '{"SrcFolder":"%s")
           echo "function list  :$file_json"
           # Append to CHANGED_FUNCTIONS array
           if [ -z "$CHANGED_FUNCTIONS" ]; then
             CHANGED_FUNCTIONS="[$file_json"
           else
             CHANGED_FUNCTIONS="$CHANGED_FUNCTIONS,$file_json"
           fi
         done
         
         # Close the JSON array if there were changed functions
         if [ -n "$CHANGED_FUNCTIONS" ]; then
           CHANGED_FUNCTIONS="$CHANGED_FUNCTIONS]"
         else
           CHANGED_FUNCTIONS='[]'
         fi
         
         # Output to GitHub environment and set output
         echo "changed-functions=$CHANGED_FUNCTIONS" >> $GITHUB_ENV
         echo "::set-output name=changed-functions::$CHANGED_FUNCTIONS"

  create-bigquery-table:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: stag   
    permissions:
      contents: read   
      id-token: write   

    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to latest version

      - id: auth
        uses: google-github-actions/auth@v2  # Updated to latest version
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}  #Use secrets here 
          service_account: ${{ vars.SERVICE_ACCOUNT }}  # Use secrets here

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          export_default_credentials: true  # Automatic credential handling   

      - name: Execute SQL file
        run: |  # Changed to multi-line for readability 
          bq query --use_legacy_sql=false --project_id=relevate-dev-403605 < ${{ matrix.function.fullpath }}
  commitwrite:
    needs: detect-changes 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Git identity
        run: |
          git config --global user.email "vikask@contata.in"
          git config --global user.name "Vikas Kumar"
      - name: Get last commit details
        id: last_commit_write
        run: |
          git pull
          LAST_COMMIT_WRITE=$(git rev-parse HEAD)
          echo "$LAST_COMMIT_WRITE" > ${{ github.workspace }}/Icfbig.txt
          echo "Last commit  hash: $LAST_COMMIT_WRITE"
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Automated commit by CI/CD"
          git push origin main
