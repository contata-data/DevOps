name: Release

on:
  release:
    types: [created]  # Trigger on release creation

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-functions: ${{ steps.detect.outputs.changed-functions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Get release details
        id: get_release
        run: |
          RELEASE_TAG=$(echo "${{ github.ref }}" | sed -n 's/refs\/tags\/\(.*\)/\1/p')
          echo "Release tag: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          
          RELEASE_PrevTAG=$(git describe --tags --abbrev=0 ${RELEASE_TAG}^)
          echo "Release Prev tag: $RELEASE_PrevTAG"
          echo "RELEASE_PrevTAG=$RELEASE_PrevTAG" >> $GITHUB_ENV

          RELEASE_PrevTAG=$(git describe --tags --abbrev=0 ${RELEASE_TAG}^)
          echo "Release Prev tag: $RELEASE_PrevTAG"
          echo "RELEASE_PrevTAG=$RELEASE_PrevTAG" >> $GITHUB_ENV
         
      - name: Show content of release tag
        run: |
          echo "Content of release tag $RELEASE_TAG:"
          git ls-tree -r $RELEASE_TAG --name-only

      - name: Print git diff output
        run: |
          echo "Comparing changes between main branch and tag $RELEASE_TAG"
          #git diff --name-only HEAD $RELEASE_PrevTAG
          #git diff --name-only HEAD $RELEASE_PrevTAG | grep -E '\.py$'
          #git describe --tags --abbrev=0 $RELEASE_TAG

      - name: Detect changes
        id: detect
        run: |
         CHANGED_FUNCTIONS=""
         for file in $(git diff --name-only $RELEASE_TAG $RELEASE_PrevTAG | grep -E '\.py$'); do
           # Extract details from file path
           SrcFolder=$(dirname "$file")
           Entry_Point=$(dirname "$file" | cut -d '_' -f 2)
           FunctionName=$(dirname "$file" | cut -d '_' -f 2)
           TriggerName=$(dirname "$file" | cut -d '/' -f 2)
           Trigger=$(dirname "$file" | cut -d '_' -f 3)
         
           # Construct JSON format for each file
           file_json=$(printf '{"SrcFolder":"%s","Entry_Point":"%s","FunctionName":"%s","TriggerName":"%s","Trigger":"%s"}' \
                              "$SrcFolder" "$Entry_Point" "$FunctionName" "$TriggerName" "$Trigger")
           echo "function list  :$file_json"
           # Append to CHANGED_FUNCTIONS array
           if [ -z "$CHANGED_FUNCTIONS" ]; then
             CHANGED_FUNCTIONS="[$file_json"
           else
             CHANGED_FUNCTIONS="$CHANGED_FUNCTIONS,$file_json"
           fi
         done
         
         # Close the JSON array if there were changed functions
         if [ -n "$CHANGED_FUNCTIONS" ]; then
           CHANGED_FUNCTIONS="$CHANGED_FUNCTIONS]"
         else
           CHANGED_FUNCTIONS='[]'
         fi
         
         # Output to GitHub environment and set output
         echo "changed-functions=$CHANGED_FUNCTIONS" >> $GITHUB_ENV
         echo "::set-output name=changed-functions::$CHANGED_FUNCTIONS"

  deploy-production:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - uses: actions/checkout@v4

      - name: Create Bucket
        if: matrix.function.Trigger == 'Storage'
        id: check_bucket
        run: |
          BUCKET_NAME="${{ matrix.function.TriggerName }}"
          PROJECT_Ids="relevate-dev-403605"
          BUCKET_FULL_NAME="relevate-dev-403605-${BUCKET_NAME}"
          echo "BUCKET_FULL_NAME=$BUCKET_FULL_NAME" >> $GITHUB_OUTPUT
          echo "BUCKET_FULL_NAME : $BUCKET_FULL_NAME"
          # Check bucket existence with exit  code handling
          TRIGGER_DETAILS=$(cat ${{ github.workspace }}/src/${{ matrix.function.SrcFolder }}/Trigger.txt)
          echo "trigger  details: $TRIGGER_DETAILS"
          echo "TRIGGER_DETAILS=$TRIGGER_DETAILS" >> $GITHUB_OUTPUT
          if [ "${TRIGGER_DETAILS}" = "" ]; then
            echo "Bucket $BUCKET_FULL_NAME does not exists "
            echo "Creating bucket $BUCKET_FULL_NAME"
            gcloud storage buckets create gs://$BUCKET_FULL_NAME \
                --project relevate-dev-403605 \
                --location us-central1
          else
            echo "Bucket $BUCKET_FULL_NAME already exists "
          fi

      - name: Create Topic
        if: matrix.function.Trigger == 'PubSub'
        id: create_topic
        run: |
          TOPIC_NAME=${{ matrix.function.TriggerName }}
          if ! gcloud pubsub topics  list --filter="name:projects/relevate-dev-403605/topics/$TOPIC_NAME" | grep "$TOPIC_NAME"; then
            # Create topic if it doesn't exist
            gcloud pubsub topics create $TOPIC_NAME
            echo "Created topic: $TOPIC_NAME"
          else
            echo "Topic: $TOPIC_NAME already  exists"
          fi

      - name: Deploy Cloud Function - Topic Trigger
        if: matrix.function.Trigger == 'PubSub'
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: ${{ matrix.function.FunctionName }}
          runtime: "python312"
          project_id: "relevate-dev-403605"
          entry_point: ${{ matrix.function.Entry_Point }}
          event_trigger_type: "google.cloud.pubsub.topic.v1.messagePublished"
          event_trigger_resource: "projects/relevate-dev-403605/topics/${{ matrix.function.TriggerName }}"
          event_trigger_pubsub_topic: "projects/relevate-dev-403605/topics/${{ matrix.function.TriggerName }}"
          event_trigger_service: "pubsub.googleapis.com"
          timeout: "10m"
          source_dir: "src/${{ matrix.function.SrcFolder }}"

      - name: Deploy Cloud Function - Storage Trigger
        if: matrix.function.Trigger == 'Storage'
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: ${{ matrix.function.FunctionName }}
          runtime: "python312"
          project_id: "relevate-dev-403605"
          entry_point: ${{ matrix.function.Entry_Point }}
          event_trigger_type: "google.cloud.storage.object.v1.finalized"
          event_trigger_resource: "projects/relevate-dev-403605/locations/us-central1/buckets/${{ steps.check_bucket.outputs.BUCKET_FULL_NAME }}"
          event_trigger_filters: |
             bucket=${{ steps.check_bucket.outputs.BUCKET_FULL_NAME }}
          timeout: "10m"
          source_dir: "src/${{ matrix.function.SrcFolder }}"

      - name: Deploy Cloud Function - HTTP Trigger
        if: matrix.function.Trigger == 'HTTP'
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: ${{ matrix.function.FunctionName }}
          runtime: "python312"
          project_id: "relevate-dev-403605"
          entry_point: ${{ matrix.function.Entry_Point }}
          timeout: "10m"
          source_dir: "src/${{ matrix.function.SrcFolder }}"
