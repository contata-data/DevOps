name: Release

on:
  release:
    types: [created]  # Trigger on release creation

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-functions: ${{ steps.detect.outputs.changed-functions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Get release details
        id: get_release
        run: |
          RELEASE_TAG=$(echo "${{ github.ref }}" | sed -n 's/refs\/tags\/\(.*\)/\1/p')
          echo "Release tag: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          
          RELEASE_PrevTAG=$(git describe --tags --abbrev=0 ${RELEASE_TAG}^)
          echo "Release Prev tag: $RELEASE_PrevTAG"
          echo "RELEASE_PrevTAG=$RELEASE_PrevTAG" >> $GITHUB_ENV

          RELEASE_PrevTAG=$(git describe --tags --abbrev=0 ${RELEASE_TAG}^)
          echo "Release Prev tag: $RELEASE_PrevTAG"
          echo "RELEASE_PrevTAG=$RELEASE_PrevTAG" >> $GITHUB_ENV
         
      - name: Show content of release tag
        run: |
          echo "Content of release tag $RELEASE_TAG:"
          git ls-tree -r $RELEASE_TAG --name-only

      - name: Print git diff output
        run: |
          echo "Comparing changes between main branch and tag $RELEASE_TAG"
          #git diff --name-only HEAD $RELEASE_PrevTAG
          #git diff --name-only HEAD $RELEASE_PrevTAG | grep -E '\.py$'
          #git describe --tags --abbrev=0 $RELEASE_TAG

      - name: Detect changes
        id: detect
        run: |
         CHANGED_FUNCTIONS=$(git diff --name-only $RELEASE_TAG $RELEASE_PrevTAG | grep -E '\.py$' | while read -r file; do
         # Extract details from file path
         SrcFolder=$(dirname "$file" | cut -d '/' -f 1)
         Entry_Point=$(basename "$file" .py)
         FunctionName=$(basename "$file" .py)
         TriggerName=$(dirname "$file" | cut -d '_' -f 2)
         Trigger=$(basename "$file" .py | cut -d '_' -f 3)
         # Output JSON format for each file
          printf '{"SrcFolder":"%s","Entry_Point":"%s","FunctionName":"%s","TriggerName":"%s","Trigger":"%s"}\n' \
                "$SrcFolder" "$Entry_Point" "$FunctionName" "$TriggerName" "$Trigger"
          done | jq -s -c '.')
         if [ -z "$CHANGED_FUNCTIONS" ]; then
           CHANGED_FUNCTIONS='[]'
         fi
         echo "changed-functions=$CHANGED_FUNCTIONS" >> $GITHUB_ENV
         echo "::set-output name=changed-functions::$CHANGED_FUNCTIONS"

  deploy-production:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - uses: actions/checkout@v4

      # Add your authentication and setup steps as needed

      - name: Deploy Cloud Function
        if: matrix.function.Trigger == 'HTTP'  # Example condition, adjust as per your needs
        uses: google-github-actions/deploy-cloud-functions@v3
        with:
          name: ${{ matrix.function.name }}
          runtime: "python312"
          project_id: "relevate-dev-403605"
          entry_point: ${{ matrix.function.entry_point }}
          timeout: "10m"
          source_dir: "src/${{ matrix.function.SrcFolder }}"
