name: CI/CD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-functions: ${{ steps.detect.outputs.changed-functions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect changes
        id: detect
        run: |
          CHANGED_FUNCTIONS=()
          git fetch origin main
          for DIR in src/*; do
            if git diff --name-only origin/main | grep -q "^$DIR/"; then
              FUNCTION_NAME=$(basename $DIR)
              ENTRY_POINT="${FUNCTION_NAME}"  # Adjust entry point as needed
              CHANGED_FUNCTIONS+=("{\"name\": \"${FUNCTION_NAME}\", \"entry_point\": \"${ENTRY_POINT}\"}")
            fi
          done
          if [ ${#CHANGED_FUNCTIONS[@]} -eq 0 ]; then
<<<<<<< HEAD
            echo "changed-functions=[]" >> $GITHUB_OUTPUT
          else
            CHANGED_FUNCTIONS_JSON=$(printf '[%s]' "$(IFS=,; echo "${CHANGED_FUNCTIONS[*]}")")
            echo "changed-functions=$CHANGED_FUNCTIONS_JSON" >> $GITHUB_OUTPUT
          fi
=======
            echo "[]" > changed-functions.json
          else
            echo "[${CHANGED_FUNCTIONS[*]}]" > changed-functions.json
          fi

      - name: Set outputs
        run: echo "::set-output name=changed-functions::$(cat changed-functions.json)"

>>>>>>> f1c1a382c782c61a278a6fd533a540a360b1b00d
  deploy-staging:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/580005102993/locations/global/workloadIdentityPools/testpool1/providers/testprovider1'
          service_account: 'devops-git@relevate-dev-403605.iam.gserviceaccount.com'

      - name: Deploy to staging
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ${{ matrix.function.name }}
          runtime: 'python312'
          project_id: 'relevate-dev-403605'
          entry_point: ${{ matrix.function.entry_point }}
          timeout: '10m'
          source_dir: 'src/${{ matrix.function.name }}'

  deploy-production:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/265885005616/locations/global/workloadIdentityPools/gitactionprod2506/providers/gitproviderprod2506'
          service_account: 'devops-git-prod@relevate-349919.iam.gserviceaccount.com'

      - name: Deploy to production
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ${{ matrix.function.name }}
          runtime: 'python312'
          project_id: 'relevate-349919'
          entry_point: ${{ matrix.function.entry_point }}
          timeout: '10m'
          source_dir: 'src/${{ matrix.function.name }}'