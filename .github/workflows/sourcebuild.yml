name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-functions: ${{ steps.detect.outputs.changed-functions }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Last Merge Commit
        id: last_merge
        run: echo "::set-output name=commit::$(git log main --merges -1 --format=%H)"

      - name: Get Previous Merge Commit
        id: prev_merge
        run: echo "::set-output name=commit::$(git log main --merges -2 --format=%H)"

      - name: List Changed Files
        id: changed_files
        run: echo "::set-output name=files::$(git diff --name-only ${{ steps.prev_merge.outputs.commit }} ${{ steps.last_merge.outputs.commit }})"

      - name: Extract Directories
        id: changed_dirs
        run: |
          CHANGED_FILES="${{ steps.changed_files.outputs.files }}"
          DIRS=$(for file in $CHANGED_FILES; do dirname $file; done | sort | uniq)
          echo "::set-output name=dirs::$DIRS"

      - id: detect
        run: |
          CHANGED_FUNCTIONS=()
          git fetch origin main
          CHANGED_DIRS="${{ steps.changed_dirs.outputs.dirs }}"
          for DIR in CHANGED_DIRS; do
              FUNCTION_NAME=$(basename $DIR)
              # Assuming entry point can be derived from function name
              ENTRY_POINT="${FUNCTION_NAME}"
              CHANGED_FUNCTIONS+=("{\"name\": \"$FUNCTION_NAME\", \"entry_point\": \"$ENTRY_POINT\"}")
          done
          if [ ${#CHANGED_FUNCTIONS[@]} -eq 0 ]; then
            echo "changed-functions=[]" >> $GITHUB_OUTPUT
          else
            CHANGED_FUNCTIONS_JSON=$(printf '[%s]' "$(IFS=,; echo "${CHANGED_FUNCTIONS[*]}")")
            echo "changed-functions=$CHANGED_FUNCTIONS_JSON" >> $GITHUB_OUTPUT
          fi

  deploy-staging:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/580005102993/locations/global/workloadIdentityPools/testpool1/providers/testprovider1"
          service_account: "devops-git@relevate-dev-403605.iam.gserviceaccount.com"

      - id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ${{ matrix.function.name }}
          runtime: "python312"
          project_id: "relevate-dev-403605"
          entry_point: ${{ matrix.function.entry_point }}
          timeout: "10m"
          source_dir: "src/${{ matrix.function.name }}"

  deploy-production:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/265885005616/locations/global/workloadIdentityPools/gitactionprod2506/providers/gitproviderprod2506"
          service_account: "devops-git-prod@relevate-349919.iam.gserviceaccount.com"

      - id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: ${{ matrix.function.name }}
          runtime: "python312"
          project_id: "relevate-349919"
          entry_point: ${{ matrix.function.entry_point }}
          timeout: "10m"
          source_dir: "src/${{ matrix.function.name }}"