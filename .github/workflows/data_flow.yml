name: Data flow
on:
  push:
    branches: 
      - main
    paths:
      - "DataFlow/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-functions: ${{ steps.detect.outputs.changed-functions }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Get last commit details
        id: last_commit
        run: |
          LAST_COMMIT=$(cat ${{ github.workspace }}/IcfDataFlow.txt || echo "Initial")
          echo "last commit: $LAST_COMMIT"
          echo "LAST_COMMIT=$LAST_COMMIT" >> $GITHUB_ENV

      - id: detect
        run: |
           CHANGED_FUNCTIONS=()
           git fetch origin main
           # Get changed files
           echo "Last commit: ${{ steps.last_commit.outputs.LAST_COMMIT }}"
           
           CHANGED_FILES=$(git diff --name-only ${{ steps.last_commit.outputs.LAST_COMMIT }} main)
           echo "Changed files: $CHANGED_FILES"
           
           # Get changed directories
           CHANGED_DIRS=$(for file in $CHANGED_FILES; do dirname $file; done | grep '^DataFlow/' | sort | uniq)
           echo "Changed directories: $CHANGED_DIRS"
           
           for DIR in $CHANGED_DIRS; do
               if [ "$DIR" = ".github" ] || [ "$DIR" = ".github/workflows" ]; then
                   continue
               fi
               echo "Directory name: $DIR"
               for file in $(git diff --name-only ${{ steps.last_commit.outputs.LAST_COMMIT }} main | grep "^$DIR/"); do
                   FUNCTION_NAME=$(basename "$file")
                   FULL_PATH="$DIR/$FUNCTION_NAME"
                   echo "Function name: $FUNCTION_NAME"
                   
                   echo "Full path: $FULL_PATH"
                   # Assuming entry point can be derived from function name
                   ENTRY_POINT="${FUNCTION_NAME}"
                   CHANGED_FUNCTIONS+=("{\"SrcFolder\": \"$FUNCTION_NAME\",\"fullpath\": \"$FULL_PATH\"}")
               done
           done
           
           if [ ${#CHANGED_FUNCTIONS[@]} -eq 0 ]; then
               echo "changed-functions=[]" >> $GITHUB_ENV
           else
               CHANGED_FUNCTIONS_JSON=$(printf '[%s]' "$(IFS=,; echo "${CHANGED_FUNCTIONS[*]}")")
               echo "changed-functions=$CHANGED_FUNCTIONS_JSON" >> $GITHUB_ENV
           
  data-flow-template:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: stag   
    permissions:
      contents: read   
      id-token: write   

    strategy:
      matrix:
        function: ${{ fromJson(needs.detect-changes.outputs.changed-functions) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to latest version

      - id: auth
        uses: google-github-actions/auth@v2  # Updated to latest version
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}  # Use secrets here 
          service_account: ${{ secrets.SERVICE_ACCOUNT }}  # Use secrets here

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          export_default_credentials: true  # Automatic credential handling   

      - name: Deploy Dataflow Template
        run: |
           gcloud dataflow jobs run relevate-gcs-to-bq-df-4 \
            --gcs-location=gs://relevate-dev-403605-devops2207/dataflow_template/relevate-gcs-to-bq-df-2 \
            --region=us-central1

  commitwrite:
    needs: detect-changes 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Git identity
        run: |
          git config --global user.email "vikask@contata.in"
          git config --global user.name "Vikas Kumar"

      - name: Get last commit details
        id: last_commit_write
        run: |
          git pull
          LAST_COMMIT_WRITE=$(git rev-parse HEAD)
          echo "$LAST_COMMIT_WRITE" > ${{ github.workspace }}/IcfDataFlow.txt
          echo "Last commit hash: $LAST_COMMIT_WRITE"

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Automated commit by CI/CD"
          git push origin main
