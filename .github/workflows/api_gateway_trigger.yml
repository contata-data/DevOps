name: API gateway deployment
on:
  push:
    branches:
      - Release
    paths:
      - "apigateway/**"

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: stag
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Deploy API Gateway
        run: |
          API_NAME=dev-ops-api-test
          CONFIG_NAME=${API_NAME}-config
          PROJECT_ID=${{ vars.PROJECTID_PROD }}
          REGION=us-central1
          
          # Print variable values
          echo "PROJECT_ID: $PROJECT_ID"
          echo "REGION: $REGION"
          echo "API_NAME: $API_NAME"
          
          # Check if the API exists
          API_EXISTS=$(gcloud api-gateway apis list --format="value(name)" --project=${PROJECT_ID})
          
          # Print API existence
          echo "API_EXISTS: $API_EXISTS"
          
          if [[ $API_EXISTS != *"$API_NAME"* ]]; then
            echo "Creating new API for $API_NAME"
            gcloud api-gateway apis create $API_NAME --display-name="$API_NAME" --project=$PROJECT_ID
          else
            echo "API $API_NAME already exists "
          fi
          # Create or update the API configuration
          CONFIG_ID=$(gcloud api-gateway api-configs list --api=$API_NAME --format="value(name)" --project=$PROJECT_ID)
          if [[ $CONFIG_ID != *"$CONFIG_NAME"* ]]; then
            echo "Creating new API Gateway configuration for $API_NAME"
            gcloud api-gateway api-configs create $CONFIG_NAME --api=$API_NAME --openapi-spec=apigateway/dev-ops-config-a.yaml --project=$PROJECT_ID
          else
            echo "Updating existing API Gateway configuration for $API_NAME"
            gcloud api-gateway api-configs update $CONFIG_NAME --api=$API_NAME --openapi-spec=apigateway/dev-ops-config-a.yaml --project=$PROJECT_ID
          fi
          # Deploy the API Gateway
          GATEWAY_NAME=${API_NAME}-gateway
          GATEWAY_EXISTS=$(gcloud api-gateway gateways list --format="value(name)" --project=$PROJECT_ID --location=$REGION)
          if [[ $GATEWAY_EXISTS != *"$GATEWAY_NAME"* ]]; then
            echo "Creating API Gateway $GATEWAY_NAME"
            gcloud api-gateway gateways create $GATEWAY_NAME --api=$API_NAME --api-config=$CONFIG_NAME --location=$REGION --project=$PROJECT_ID
          else
            echo "Updating API Gateway $GATEWAY_NAME"
            gcloud api-gateway gateways update $GATEWAY_NAME --api=$API_NAME --api-config=$CONFIG_NAME --location=$REGION --project=$PROJECT_ID
          fi
