name: Update Secret Manager Key Value

on:
  push:
    branches:
      - main
    paths:
      - "secretmanagerconfigs/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-secrets: ${{ steps.detect.outputs.changed-secrets }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get last commit details
        id: last_commit
        run: |
          LAST_COMMIT=$(git rev-parse HEAD)
          echo "LAST_COMMIT=$LAST_COMMIT" >> $GITHUB_OUTPUT

      - id: detect
        run: |
          CHANGED_SECRETS=()
          git fetch origin main
          CHANGED_FILES=$(git diff --name-only ${{ steps.last_commit.outputs.LAST_COMMIT }} main)
          CHANGED_DIRS=$(for file in $CHANGED_FILES; do dirname $file; done | grep '^secrets/' | sort | uniq)
          for DIR in $CHANGED_DIRS; do
              for file in $(git diff --name-only ${{ steps.last_commit.outputs.LAST_COMMIT }} main | grep "^$DIR/"); do
                  SECRET_NAME=$(basename "$file")
                  FULL_PATH="$DIR/$SECRET_NAME"
                  CHANGED_SECRETS+=("{\"SecretName\": \"$SECRET_NAME\",\"fullpath\": \"$FULL_PATH\"}")
              done
          done
          if [ ${#CHANGED_SECRETS[@]} -eq 0 ]; then
              echo "changed-secrets=[]" >> $GITHUB_OUTPUT
          else
              CHANGED_SECRETS_JSON=$(printf '[%s]' "$(IFS=,; echo "${CHANGED_SECRETS[*]}")")
              echo "changed-secrets=$CHANGED_SECRETS_JSON" >> $GITHUB_OUTPUT
          fi

  update-secret-manager:
    needs: detect-changes
    runs-on: ubuntu-latest
    environment: stag
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: "latest"
          export_default_credentials: true

      - name: Ensure worbix-url secret exists
        run: |
          if ! gcloud secrets describe worbix-url >/dev/null 2>&1; then
            echo "Secret worbix-url does not exist. Creating..."
            gcloud secrets create worbix-url --replication-policy="automatic"
          else
            echo "Secret worbix-url already exists."
          fi

      - name: Deploy config-stage.json to Secret Manager as worbix-url
        run: |
          echo "Uploading /secretmanagerconfigs/config-stage.json to Secret Manager as worbix-url"
          gcloud secrets versions add worbix-url --data-file="secretmanagerconfigs/config-stage.json"

  commitwrite:
    needs: detect-changes
    runs-on: ubuntu-latest
    concurrency:
      group: commitwrite-main
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v2

      - name: Set up Git identity
        run: |
          git config --global user.email "vikask@contata.in"
          git config --global user.name "Vikas Kumar"
      - name: Get last commit details
        id: last_commit_write
        run: |
          git pull
          LAST_COMMIT_WRITE=$(git rev-parse HEAD)
          echo "$LAST_COMMIT_WRITE" > ${{ github.workspace }}/Icfbig.txt
          echo "Last commit hash: $LAST_COMMIT_WRITE"
      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Automated commit by CI/CD"
          git push origin main
